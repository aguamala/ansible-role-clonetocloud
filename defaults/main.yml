---
# defaults file for ansible-role-clonetocloud


#clonetocloud_user:
#clonetocloud_dir:
#clonetocloud_pull:

#clonetocloud_docker_compose_tag:
#clonetocloud_docker_compose_restart:
clonetocloud_docker_compose_volumes: []
clonetocloud_docker_compose_volumes_from: []
#clonetocloud_docker_compose_env_vars
#clonetocloud_docker_compose_network:


#docker-compose settings
clonetocloud:
  user: "{{ clonetocloud_user | default('centos') }}"
  dir: "{{ clonetocloud_dir | default ('clonetocloud') }}"
  pull: "{{ clonetocloud_pull | default('no') }}"

  docker_compose:
    tag: "{{ clonetocloud_docker_compose_tag | default('latest') }}"
    restart: "{{ clonetocloud_docker_compose_restart | default('unless-stopped') }}"
    volumes: "{{ clonetocloud_docker_compose_volumes | default([]) }}"
    volumes_from: "{{ clonetocloud_docker_compose_volumes_from | default([]) }}"
    env_vars: "{{ clonetocloud_docker_compose_env_vars | default([]) }}"
    network: "{{ clonetocloud_docker_compose_network | default([]) }}"


#use ansible vault
clonetocloud_rclone_access_key:
clonetocloud_rclone_secret_key: 
#clonetocloud_rclone_type:


#override lsyncd conf
clonetocloud_lsyncd:
  - name: synclocal
    type: backup
    source: /home/centos/test
    #volumes_from: container
    volumes: /home/centos/test:/home/centos/test
    target: remote:gex.pruebas/agencias
    onstartup_sync: yes
    #everything_except:
    #nothing_except:

#override rclone conf

#clonetocloud_rclone:
#  - name: remote
#    access_key: "{{ clonetocloud_rclone_access_key | default(omit) }}"
#    secret_key: "{{ clonetocloud_rclone_secret_key | default(omit) }}"
#    type: "{{ clonetocloud_rclone_type | default('s3') }}"
