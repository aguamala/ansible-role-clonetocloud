-- User configuration file for lsyncd.
--
-- Simple example for default rsync, but executing moves through on the target.
--
-- For more examples, see /usr/share/doc/lsyncd*/examples/
--
-- sync{default.rsyncssh, source="/var/www/html", host="localhost", targetdir="/tmp/htmlcopy/"}

settings  {
        nodaemon   = true,
}

{% for sync in clonetocloud_lsyncd  %}
{{ sync.name }} = {
        delay = {{ sync.delay | default('5') }},
        maxProcesses = {{ sync.max_processes | default('1') }},


        onCreate = function(event)
                if not event.isdir then
                    -- target relative path hack
                    local targetRelative = event.targetPathname:gsub(event.name, "")
                    spawn(event, "/usr/local/bin/rclone",
                        "copy",
                        "--filter-from",
                        "filters/{{ sync.name }}-filter-from.txt",
                        event.sourcePathname, targetRelative)
                end
        end,

        onModify = function(event)
                if not event.isdir then
                    -- target relative path hack
                    local targetRelative = event.targetPathname:gsub(event.name, "")
                    spawn(event, "/usr/local/bin/rclone",
                        "copy",
                        "--filter-from",
                        "filters/{{ sync.name }}-filter-from.txt",
                        event.sourcePathname, targetRelative)
                end
        end,

        onMove = function(oEvent, dEvent)
                if oEvent.isdir then
                    spawn(oEvent, "/usr/local/bin/rclone",
                        "move",
                        oEvent.targetPathname,  dEvent.targetPath)
                else
                    -- target relative path hack
                    local targetRelative = dEvent.targetPathname:gsub(dEvent.name, "")

                    local rclonecopy = "rclone copy  " .. dEvent.sourcePathname .. " " .. targetRelative .. "&& "

                    spawnShell(oEvent, rclonecopy..[[rclone "$1" "$2"]], "delete",oEvent.targetPathname)

                end
        end,

{% if sync.type == "sync" %}
        onDelete = function(event)
                if not event.isdir then
                        spawn(event, "/usr/local/bin/rclone",
                            "delete",
                            "--filter-from",
                            "filters/{{ sync.name }}-filter-from.txt",
                            event.targetPathname)
                end
        end,

        onStartup = "rclone sync --filter-from filters/{{ sync.name }}-filter-from.txt ^source ^target/",
{% else %}
        onStartup = "rclone copy --filter-from filters/{{ sync.name }}-filter-from.txt ^source ^target/",
{% endif %}

}

sync {
        {{ sync.name }},
        source ="{{ sync.source }}",
        target ="{{ sync.target }}",
}

{% endfor %}
